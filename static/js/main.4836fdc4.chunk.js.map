{"version":3,"sources":["components/skid-dice/index.js","App.js","index.js"],"names":["SkidDice","props","className","roll","App","useState","rolls","setRolls","setRolledDice","no","rolling","Array","from","length","Math","floor","random","value","onClick","map","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAceA,MAZf,SAAkBC,GAMhB,OACE,qBAAKC,UAJC,aAAN,OADe,CAAC,SAAU,OAAQ,QAAS,QAAS,QAAS,SAChCD,EAAME,UC+BxBC,MAhCf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAgB,SAACC,GACrB,IAAIC,EAAUC,MAAMC,KAAK,CAACC,OAAQJ,IAAK,kBAAMK,KAAKC,MAAsB,EAAhBD,KAAKE,aAC7DT,EAASG,IAGX,OACE,sBAAKR,UAAU,MAAf,UACE,yCAGA,4DAGA,gCACE,wBAAQA,UAAU,cAAce,MAAM,IAAIC,QAAS,kBAAMV,EAAc,IAAvE,eACA,wBAAQN,UAAU,cAAce,MAAM,IAAIC,QAAS,kBAAMV,EAAc,IAAvE,eACA,wBAAQN,UAAU,cAAce,MAAM,IAAIC,QAAS,kBAAMV,EAAc,IAAvE,eACA,wBAAQN,UAAU,cAAce,MAAM,IAAIC,QAAS,kBAAMV,EAAc,IAAvE,eACA,wBAAQN,UAAU,cAAce,MAAM,IAAIC,QAAS,kBAAMV,EAAc,IAAvE,kBAEF,sBAEA,8BACIF,EAAMa,KAAI,SAAChB,EAAMiB,GAAP,OAAiB,cAAC,EAAD,CAAsBjB,KAAMA,GAAbiB,YCxBpDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4836fdc4.chunk.js","sourcesContent":["import './skid-dice.css'\n\nfunction SkidDice(props) {\n  const diceClass = () => {\n    var classMap = [\"hazard\", \"spin\", \"slide\", \"shift\", \"shift\", \"shift\"]\n    return `skid-dice ${classMap[props.roll]}`\n  }\n\n  return (\n    <div className={diceClass()}>\n    </div>\n  );\n}\n\nexport default SkidDice;\n","import './App.css';\nimport SkidDice from './components/skid-dice'\nimport { useState } from 'react'\n\nfunction App() {\n  const [rolls, setRolls] = useState([])\n\n  const setRolledDice = (no) => {\n    var rolling = Array.from({length: no}, () => Math.floor(Math.random() * 6));\n    setRolls(rolling)\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>\n        Skidder\n      </h1>\n      <p>\n        Tap number of dice to roll:\n      </p>\n      <div>\n        <button className=\"roll-button\" value=\"1\" onClick={() => setRolledDice(1)}>1</button>\n        <button className=\"roll-button\" value=\"2\" onClick={() => setRolledDice(2)}>2</button>\n        <button className=\"roll-button\" value=\"3\" onClick={() => setRolledDice(3)}>3</button>\n        <button className=\"roll-button\" value=\"4\" onClick={() => setRolledDice(4)}>4</button>\n        <button className=\"roll-button\" value=\"5\" onClick={() => setRolledDice(5)}>5</button>\n      </div>\n      <p>\n      </p>\n      <div>\n        { rolls.map((roll, index) => <SkidDice key={index} roll={roll} />) }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}